<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_evkmimx8ulp_examples_manifest_v3_14" name="SDK_2.x_evkmimx8ulp_examples_manifest_v3_14" format_version="3.14" api_version="2.0.0" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.14.xsd">

  <externalDefinitions>
    <definition extID="MIMX8UD7DVP08"/>
  </externalDefinitions>
  <ksdk id="MCUXpressoSDK216000_evkmimx8ulp_examples_manifest_v3_14" name="MCUXpressoSDK216000_evkmimx8ulp_examples_manifest_v3_14" version="2.16.000" revision="2.16.000"/>
  <boards>
    <board id="evkmimx8ulp" name="EVK-MIMX8ULP" version="1.0.0" package="MIMX8UD7DVP08">
      <examples>
        <example id="evkmimx8ulp_hello_world" name="hello_world" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimx8ulp/demo_apps/hello_world">
          <external path="demo_apps/hello_world" type="xml">
            <files mask="hello_world_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_hello_world_s" name="hello_world_s" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is secure part of the application." toolchain="armgcc" compiler="compiler_gcc" category="trustzone_examples" linked_projects="evkmimx8ulp_hello_world_ns" path="examples/evkmimx8ulp/trustzone_examples/hello_world/hello_world_s">
          <external path="trustzone_examples/hello_world/hello_world_s" type="xml">
            <files mask="hello_world_s_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_hello_world_ns" name="hello_world_ns" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is non-secure part of the application." toolchain="armgcc" compiler="compiler_gcc" category="trustzone_examples" linked_projects="evkmimx8ulp_hello_world_s" path="examples/evkmimx8ulp/trustzone_examples/hello_world/hello_world_ns">
          <external path="trustzone_examples/hello_world/hello_world_ns" type="xml">
            <files mask="hello_world_ns_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpuart_polling" name="lpuart_polling" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimx8ulp/driver_examples/lpuart/polling">
          <external path="driver_examples/lpuart/polling" type="xml">
            <files mask="lpuart_polling_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpuart_interrupt" name="lpuart_interrupt" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimx8ulp/driver_examples/lpuart/interrupt">
          <external path="driver_examples/lpuart/interrupt" type="xml">
            <files mask="lpuart_interrupt_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpuart_interrupt_transfer" name="lpuart_interrupt_transfer" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimx8ulp/driver_examples/lpuart/interrupt_transfer">
          <external path="driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="lpuart_interrupt_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpuart_interrupt_rb_transfer" name="lpuart_interrupt_rb_transfer" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimx8ulp/driver_examples/lpuart/interrupt_rb_transfer">
          <external path="driver_examples/lpuart/interrupt_rb_transfer" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpuart_edma_transfer" name="lpuart_edma_transfer" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimx8ulp/driver_examples/lpuart/edma_transfer">
          <external path="driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="lpuart_edma_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpi2c_read_accel_value_transfer" name="lpi2c_read_accel_value_transfer" brief="The lpi2c_read_accel_value example shows how to use LPI2C driver to communicate with an lpi2c device: 1. How to use the lpi2c driver to read a lpi2c device who_am_I register. 2. How to use the lpi2c driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimx8ulp/driver_examples/lpi2c/read_accel_value_transfer">
          <external path="driver_examples/lpi2c/read_accel_value_transfer" type="xml">
            <files mask="lpi2c_read_accel_value_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpi2c_interrupt_b2b_transfer_master" name="lpi2c_interrupt_b2b_transfer_master" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimx8ulp/driver_examples/lpi2c/interrupt_b2b_transfer/master">
          <external path="driver_examples/lpi2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpi2c_interrupt_b2b_transfer_slave" name="lpi2c_interrupt_b2b_transfer_slave" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimx8ulp/driver_examples/lpi2c/interrupt_b2b_transfer/slave">
          <external path="driver_examples/lpi2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpi2c_edma_b2b_transfer_master" name="lpi2c_edma_b2b_transfer_master" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimx8ulp/driver_examples/lpi2c/edma_b2b_transfer/master">
          <external path="driver_examples/lpi2c/edma_b2b_transfer/master" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpi2c_edma_b2b_transfer_slave" name="lpi2c_edma_b2b_transfer_slave" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimx8ulp/driver_examples/lpi2c/edma_b2b_transfer/slave">
          <external path="driver_examples/lpi2c/edma_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpi2c_polling_b2b_master" name="lpi2c_polling_b2b_master" brief="The lpi2c_polling_b2b_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimx8ulp/driver_examples/lpi2c/polling_b2b/master">
          <external path="driver_examples/lpi2c/polling_b2b/master" type="xml">
            <files mask="lpi2c_polling_b2b_master_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpi2c_polling_b2b_slave" name="lpi2c_polling_b2b_slave" brief="The lpi2c_polling_b2b_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimx8ulp/driver_examples/lpi2c/polling_b2b/slave">
          <external path="driver_examples/lpi2c/polling_b2b/slave" type="xml">
            <files mask="lpi2c_polling_b2b_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dma3_memory_to_memory" name="dma3_memory_to_memory" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma" path="examples/evkmimx8ulp/driver_examples/edma/memory_to_memory">
          <external path="driver_examples/edma/memory_to_memory" type="xml">
            <files mask="dma3_memory_to_memory_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dma3_lpav_memory_to_memory" name="dma3_lpav_memory_to_memory" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma" path="examples/evkmimx8ulp/driver_examples/edma/lpav_memory_to_memory">
          <external path="driver_examples/edma/lpav_memory_to_memory" type="xml">
            <files mask="dma3_lpav_memory_to_memory_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dma3_scatter_gather" name="dma3_scatter_gather" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma" path="examples/evkmimx8ulp/driver_examples/edma/scatter_gather">
          <external path="driver_examples/edma/scatter_gather" type="xml">
            <files mask="dma3_scatter_gather_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_rgpio_led_output" name="rgpio_led_output" brief="The RGPIO Example project is a demonstration program that uses the SDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/rgpio" path="examples/evkmimx8ulp/driver_examples/rgpio/led_output">
          <external path="driver_examples/rgpio/led_output" type="xml">
            <files mask="rgpio_led_output_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_rgpio_input_interrupt" name="rgpio_input_interrupt" brief="The RGPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example uses the button to control/toggle the LED." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/rgpio" path="examples/evkmimx8ulp/driver_examples/rgpio/input_interrupt">
          <external path="driver_examples/rgpio/input_interrupt" type="xml">
            <files mask="rgpio_input_interrupt_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_secure_rgpio_s" name="secure_rgpio_s" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is secure part of the application." toolchain="armgcc" compiler="compiler_gcc" category="trustzone_examples" linked_projects="evkmimx8ulp_secure_rgpio_ns" path="examples/evkmimx8ulp/trustzone_examples/secure_rgpio/secure_rgpio_s">
          <external path="trustzone_examples/secure_rgpio/secure_rgpio_s" type="xml">
            <files mask="secure_rgpio_s_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_secure_rgpio_ns" name="secure_rgpio_ns" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is non-secure part of the application." toolchain="armgcc" compiler="compiler_gcc" category="trustzone_examples" linked_projects="evkmimx8ulp_secure_rgpio_s" path="examples/evkmimx8ulp/trustzone_examples/secure_rgpio/secure_rgpio_ns">
          <external path="trustzone_examples/secure_rgpio/secure_rgpio_ns" type="xml">
            <files mask="secure_rgpio_ns_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_secure_faults_trdc_s" name="secure_faults_trdc_s" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is secure part of the application." toolchain="armgcc" compiler="compiler_gcc" category="trustzone_examples" linked_projects="evkmimx8ulp_secure_faults_trdc_ns" path="examples/evkmimx8ulp/trustzone_examples/secure_faults_trdc/secure_faults_trdc_s">
          <external path="trustzone_examples/secure_faults_trdc/secure_faults_trdc_s" type="xml">
            <files mask="secure_faults_trdc_s_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_secure_faults_trdc_ns" name="secure_faults_trdc_ns" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is non-secure part of the application." toolchain="armgcc" compiler="compiler_gcc" category="trustzone_examples" linked_projects="evkmimx8ulp_secure_faults_trdc_s" path="examples/evkmimx8ulp/trustzone_examples/secure_faults_trdc/secure_faults_trdc_ns">
          <external path="trustzone_examples/secure_faults_trdc/secure_faults_trdc_ns" type="xml">
            <files mask="secure_faults_trdc_ns_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_wdog32" name="wdog32" brief="The WDOG32 Example project is to demonstrate usage of the KSDK wdog32 driver.In this example, fast testing is first implemented to test the wdog32.After this, refreshing the watchdog in None-window mode and window mode is executed.Note wdog32 is disabled in SystemInit function which means wdog32 is disabledafter chip emerges from reset." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/wdog32" path="examples/evkmimx8ulp/driver_examples/wdog32">
          <external path="driver_examples/wdog32" type="xml">
            <files mask="wdog32_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexcan_loopback" name="flexcan_loopback" brief="The flexcan_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimx8ulp/driver_examples/flexcan/loopback">
          <external path="driver_examples/flexcan/loopback" type="xml">
            <files mask="flexcan_loopback_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexcan_loopback_transfer" name="flexcan_loopback_transfer" brief="The flexcan_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimx8ulp/driver_examples/flexcan/loopback_transfer">
          <external path="driver_examples/flexcan/loopback_transfer" type="xml">
            <files mask="flexcan_loopback_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexcan_loopback_edma_transfer" name="flexcan_loopback_edma_transfer" brief="The flexcan_loopback_edma example shows how to use the EDMA version transactional driver to receiveCAN Message from Rx FIFO:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Tx Message Buffer and also setup Rx FIFO. After that, the example will send 4 CAN Messagesfrom Tx Message Buffer to Rx FIFO through internal loopback interconnect and read them out usingEDMA version FlexCAN transactional driver. The Sent and received message will be print out to terminalat last." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimx8ulp/driver_examples/flexcan/loopback_edma_transfer">
          <external path="driver_examples/flexcan/loopback_edma_transfer" type="xml">
            <files mask="flexcan_loopback_edma_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexcan_interrupt_transfer" name="flexcan_interrupt_transfer" brief="The flexcan_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimx8ulp/driver_examples/flexcan/interrupt_transfer">
          <external path="driver_examples/flexcan/interrupt_transfer" type="xml">
            <files mask="flexcan_interrupt_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexcan_ping_pong_buffer_transfer" name="flexcan_ping_pong_buffer_transfer" brief="The flexcan_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CAN frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CAN messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimx8ulp/driver_examples/flexcan/ping_pong_buffer_transfer">
          <external path="driver_examples/flexcan/ping_pong_buffer_transfer" type="xml">
            <files mask="flexcan_ping_pong_buffer_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_canfd_loopback" name="canfd_loopback" brief="The canfd_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimx8ulp/driver_examples/canfd/loopback">
          <external path="driver_examples/canfd/loopback" type="xml">
            <files mask="canfd_loopback_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_canfd_loopback_transfer" name="canfd_loopback_transfer" brief="The canfd_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimx8ulp/driver_examples/canfd/loopback_transfer">
          <external path="driver_examples/canfd/loopback_transfer" type="xml">
            <files mask="canfd_loopback_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexcan_efifo_edma_transfer" name="flexcan_efifo_edma_transfer" brief="The flexcan_efifo_edma_transfer example shows how to use the EDMA version transactional driver to receive CAN FD Message from Enhanced Rx FIFO:In this example, when set ENABLE_LOOPBACK macro, only one board is needed. The example will config one FlexCAN Message Buffer to Tx Message Buffer and setup Enhanced Rx FIFO. After that, the example will send 4 CAN FD Messages from Tx Message Buffer to Enhanced Rx FIFO through internal loopback interconnect and read them out using EDMA version FlexCAN transactional driver. The send and received message will be print out to terminal. When not define ENABLE_LOOPBACK, need 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B receive the message by Enhanced Rx FIFO and read them out using EDMA version FlexCAN transactional driver. The send and received message will be print out to terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimx8ulp/driver_examples/flexcan/efifo_edma_transfer">
          <external path="driver_examples/flexcan/efifo_edma_transfer" type="xml">
            <files mask="flexcan_efifo_edma_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexcan_efifo_interrupt_transfer" name="flexcan_efifo_interrupt_transfer" brief="flexcan_efifo_interrupt_transfer example shows how to use FlexCAN Enhanced Rx FIFO in none-blocking interrupt way:In this example, when set ENABLE_LOOPBACK macro, only one board is needed. The example will config one FlexCAN Message Buffer to Tx Message Buffer and setup Enhanced Rx FIFO. After that, the example will send 4 CAN FD Messages from Tx Message Buffer to Enhanced Rx FIFO through internal loopback interconnect. The send and received message will be print out to terminal When not define ENABLE_LOOPBACK, need 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B receive the message by Enhanced Rx FIFO, and print the message content to terminal after receive 4 CAN FD messages." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimx8ulp/driver_examples/flexcan/efifo_interrupt_transfer">
          <external path="driver_examples/flexcan/efifo_interrupt_transfer" type="xml">
            <files mask="flexcan_efifo_interrupt_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexcan_pretended_networking_wakeup" name="flexcan_pretended_networking_wakeup" brief="The flexcan_pretended_networking_wakeup example shows how to wake up FLEXCAN module from Pretended Networking mode:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B will wake up from STOP mode after receive 4 specific frame, and print the message content to terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimx8ulp/driver_examples/flexcan/pretended_networking_wakeup">
          <external path="driver_examples/flexcan/pretended_networking_wakeup" type="xml">
            <files mask="flexcan_pretended_networking_wakeup_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_canfd_interrupt_transfer" name="canfd_interrupt_transfer" brief="The canfd_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimx8ulp/driver_examples/canfd/interrupt_transfer">
          <external path="driver_examples/canfd/interrupt_transfer" type="xml">
            <files mask="canfd_interrupt_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_canfd_ping_pong_buffer_transfer" name="canfd_ping_pong_buffer_transfer" brief="The canfd_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CANFD frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CANFD messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimx8ulp/driver_examples/canfd/ping_pong_buffer_transfer">
          <external path="driver_examples/canfd/ping_pong_buffer_transfer" type="xml">
            <files mask="canfd_ping_pong_buffer_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexspi_octal_polling_transfer_unify" name="flexspi_octal_polling_transfer_unify" brief="The flexspi_octal_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external octal flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct. It can support multiple nor flash at the same time with minimum modify." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimx8ulp/driver_examples/flexspi/octal/polling_transfer_unify">
          <external path="driver_examples/flexspi/octal/polling_transfer_unify" type="xml">
            <files mask="flexspi_octal_polling_transfer_unify_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexspi_octal_edma_transfer_unify" name="flexspi_octal_edma_transfer_unify" brief="The flexspi_octal_edma_transfer_unify example shows how to use flexspi driver with edma. In this example, flexspi will send data and operate the external nor flash connected with FLEXSPI. Some simple flash command will be executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct. It can support multiple nor flash at the same time with minimum modify." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimx8ulp/driver_examples/flexspi/octal/edma_transfer_unify">
          <external path="driver_examples/flexspi/octal/edma_transfer_unify" type="xml">
            <files mask="flexspi_octal_edma_transfer_unify_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexspi_psram_polling_transfer" name="flexspi_psram_polling_transfer" brief="The flexspi_psram_polling_transfer example shows how to use flexspi driver with polling: In this example, flexspi will send data and operate the external PSRAM connected with FLEXSPI. Some simple flash command will be executed, such as Read Data and Write Data.Example will write/read through the whole chip, through IP command and AHB command." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimx8ulp/driver_examples/flexspi/psram/polling_transfer">
          <external path="driver_examples/flexspi/psram/polling_transfer" type="xml">
            <files mask="flexspi_psram_polling_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexspi_psram_edma_transfer" name="flexspi_psram_edma_transfer" brief="The flexspi_psram_edma_transfer example shows how to use flexspi driver with dma: In this example, flexspi will send data and operate the external PSRAM connected with FLEXSPI. Some simple flash command will be executed, such as Read Data and Write Data.Example will write/read through the whole chip, through IP command and AHB command." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimx8ulp/driver_examples/flexspi/psram/edma_transfer">
          <external path="driver_examples/flexspi/psram/edma_transfer" type="xml">
            <files mask="flexspi_psram_edma_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpspi_polling_b2b_transfer_master" name="lpspi_polling_b2b_transfer_master" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimx8ulp/driver_examples/lpspi/polling_b2b_transfer/master">
          <external path="driver_examples/lpspi/polling_b2b_transfer/master" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpspi_polling_b2b_transfer_slave" name="lpspi_polling_b2b_transfer_slave" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimx8ulp/driver_examples/lpspi/polling_b2b_transfer/slave">
          <external path="driver_examples/lpspi/polling_b2b_transfer/slave" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpspi_interrupt_b2b_transfer_master" name="lpspi_interrupt_b2b_transfer_master" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimx8ulp/driver_examples/lpspi/interrupt_b2b_transfer/master">
          <external path="driver_examples/lpspi/interrupt_b2b_transfer/master" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpspi_interrupt_b2b_transfer_slave" name="lpspi_interrupt_b2b_transfer_slave" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimx8ulp/driver_examples/lpspi/interrupt_b2b_transfer/slave">
          <external path="driver_examples/lpspi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpspi_edma_b2b_transfer_master" name="lpspi_edma_b2b_transfer_master" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimx8ulp/driver_examples/lpspi/edma_b2b_transfer/master">
          <external path="driver_examples/lpspi/edma_b2b_transfer/master" type="xml">
            <files mask="lpspi_edma_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpspi_edma_b2b_transfer_slave" name="lpspi_edma_b2b_transfer_slave" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimx8ulp/driver_examples/lpspi/edma_b2b_transfer/slave">
          <external path="driver_examples/lpspi/edma_b2b_transfer/slave" type="xml">
            <files mask="lpspi_edma_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpspi_interrupt_b2b_master" name="lpspi_interrupt_b2b_master" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimx8ulp/driver_examples/lpspi/interrupt_b2b/master">
          <external path="driver_examples/lpspi/interrupt_b2b/master" type="xml">
            <files mask="lpspi_interrupt_b2b_master_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpspi_interrupt_b2b_slave" name="lpspi_interrupt_b2b_slave" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimx8ulp/driver_examples/lpspi/interrupt_b2b/slave">
          <external path="driver_examples/lpspi/interrupt_b2b/slave" type="xml">
            <files mask="lpspi_interrupt_b2b_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpit_single_channel" name="lpit_single_channel" brief="The LPIT single channel project is a simple example of the SDK LPIT driver. It sets up the LPIThardware block to trigger a periodic interrupt after every 1 second. When the LPIT interrupt is triggereda message a printed on the serial terminal and an LED is toggled on the board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpit" path="examples/evkmimx8ulp/driver_examples/lpit/single_channel">
          <external path="driver_examples/lpit/single_channel" type="xml">
            <files mask="lpit_single_channel_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_tpm_timer" name="tpm_timer" brief="The TPM project is a simple demonstration program of the SDK TPM driver to use TPM as a timer.It sets up the TPM hardware block to trigger an interrupt every 1 millisecond.When the TPM interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/evkmimx8ulp/driver_examples/tpm/timer">
          <external path="driver_examples/tpm/timer" type="xml">
            <files mask="tpm_timer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_tpm_simple_pwm" name="tpm_simple_pwm" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output a center-aligned PWM signal. The PWM dutycycle is manually updated.On boards that have an LED connected to the TPM pins, the user will see a change in LEDbrightness if user enter different values." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/evkmimx8ulp/driver_examples/tpm/simple_pwm">
          <external path="driver_examples/tpm/simple_pwm" type="xml">
            <files mask="tpm_simple_pwm_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_tpm_dual_edge_capture" name="tpm_dual_edge_capture" brief="The TPM project is a demonstration program of the SDK TPM driver's dual-edge capture feature.This feature is available only on certain SoC's.The example sets up a TPM channel-pair for dual-edge capture. Once the input signal is received,this example will print the capture values and period of the input signal on the terminal window." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/evkmimx8ulp/driver_examples/tpm/dual_edge_capture">
          <external path="driver_examples/tpm/dual_edge_capture" type="xml">
            <files mask="tpm_dual_edge_capture_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_tpm_input_capture" name="tpm_input_capture" brief="The TPM project is a demonstration program of the SDK TPM driver's input capture feature.The example sets up a TPM channel for dual-edge capture. Once the input signal is received,this example will print the capture value." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/evkmimx8ulp/driver_examples/tpm/input_capture">
          <external path="driver_examples/tpm/input_capture" type="xml">
            <files mask="tpm_input_capture_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_tpm_output_compare" name="tpm_output_compare" brief="The TPM project is a demonstration program of the SDK TPM driver's output compare feature.It sets up one TPM channel to toggle the output when a match occurs with the channel value. The usershould probe the TPM output with a oscilloscope to see the signal toggling." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/evkmimx8ulp/driver_examples/tpm/output_compare">
          <external path="driver_examples/tpm/output_compare" type="xml">
            <files mask="tpm_output_compare_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_tpm_pwm_twochannel" name="tpm_pwm_twochannel" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The PWM dutycycle on both channelsis manually updated. On boards that have an LED connected to the TPM pins, the user will seea change in LED brightness if user enter different values." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/evkmimx8ulp/driver_examples/tpm/pwm_twochannel">
          <external path="driver_examples/tpm/pwm_twochannel" type="xml">
            <files mask="tpm_pwm_twochannel_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_tpm_combine_pwm" name="tpm_combine_pwm" brief="The TPM project is a demonstration program of generating a combined PWM signal by the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The example also show's the complementary mode of operationand deadtime insertion.On boards that have 2 LEDs connected to the TPM pins, the user will seea change in LED brightness if user enter different values.And if the board do not support LEDs to show, the outputs can be observed by oscilloscope." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/evkmimx8ulp/driver_examples/tpm/combine_pwm">
          <external path="driver_examples/tpm/combine_pwm" type="xml">
            <files mask="tpm_combine_pwm_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_acmp_interrupt_print" name="acmp_interrupt_print" brief="The ACMP Interrupt project is a simple demonstration program that uses the SDK software. Itcompares the selected analog input with ACMP internal DAC output continuously and toggle the LEDwhen the final comparison result changed. The purpose of this demo is to show how to use theACMP driver in SDK software by interrupt way. The ACMP can be configured based on defaultconfiguration returned by the API ACMP_GetDefaultConfig(). The default configuration is: highspeed is not enabled, invert output is not enabled, unfiltered output is not enabled, pin outis not enabled, offset level is level 0, hysteresis level is level 0." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/acmp" path="examples/evkmimx8ulp/driver_examples/acmp/interrupt">
          <external path="driver_examples/acmp/interrupt" type="xml">
            <files mask="acmp_interrupt_print_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_acmp_polling_print" name="acmp_polling_print" brief="The ACMP Polling project is a simple demonstration program that uses the SDK software. It comparesthe selected analog input with ACMP internal DAC output continuously and toggle the LED when thefinal comparison result changed. The purpose of this demo is to show how to use the ACMP driverin SDK software by polling way. The ACMP can be configured based on default configuration returnedby the API ACMP_GetDefaultConfig(). The default configuration is: high speed is not enabled, invertoutput is not enabled, unfiltered output is not enabled, pin out is not enabled, offset level islevel 0, hysteresis level is level 0." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/acmp" path="examples/evkmimx8ulp/driver_examples/acmp/polling">
          <external path="driver_examples/acmp/polling" type="xml">
            <files mask="acmp_polling_print_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_casper" name="casper" brief="The CASPER Example project is a demonstration program that uses the KSDK software to calculate RSA." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/casper" path="examples/evkmimx8ulp/driver_examples/casper">
          <external path="driver_examples/casper" type="xml">
            <files mask="casper_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpuart_interrupt_transfer" name="cmsis_lpuart_interrupt_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="examples/evkmimx8ulp/cmsis_driver_examples/lpuart/interrupt_transfer">
          <external path="cmsis_driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpuart_edma_transfer" name="cmsis_lpuart_edma_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="examples/evkmimx8ulp/cmsis_driver_examples/lpuart/edma_transfer">
          <external path="cmsis_driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpi2c_edma_b2b_transfer_master" name="cmsis_lpi2c_edma_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimx8ulp/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master">
          <external path="cmsis_driver_examples/lpi2c/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpi2c_edma_b2b_transfer_slave" name="cmsis_lpi2c_edma_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimx8ulp/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave">
          <external path="cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpi2c_int_b2b_transfer_master" name="cmsis_lpi2c_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimx8ulp/cmsis_driver_examples/lpi2c/int_b2b_transfer/master">
          <external path="cmsis_driver_examples/lpi2c/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpi2c_int_b2b_transfer_slave" name="cmsis_lpi2c_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimx8ulp/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave">
          <external path="cmsis_driver_examples/lpi2c/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpspi_edma_b2b_transfer_master" name="cmsis_lpspi_edma_b2b_transfer_master" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimx8ulp/cmsis_driver_examples/lpspi/edma_b2b_transfer/master">
          <external path="cmsis_driver_examples/lpspi/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpspi_edma_b2b_transfer_slave" name="cmsis_lpspi_edma_b2b_transfer_slave" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimx8ulp/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave">
          <external path="cmsis_driver_examples/lpspi/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpspi_int_b2b_transfer_master" name="cmsis_lpspi_int_b2b_transfer_master" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimx8ulp/cmsis_driver_examples/lpspi/int_b2b_transfer/master">
          <external path="cmsis_driver_examples/lpspi/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpspi_int_b2b_transfer_slave" name="cmsis_lpspi_int_b2b_transfer_slave" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimx8ulp/cmsis_driver_examples/lpspi/int_b2b_transfer/slave">
          <external path="cmsis_driver_examples/lpspi/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpadc_temperature_measurement" name="lpadc_temperature_measurement" brief="The lpadc_temperature_measurement example shows how to measure the temperature within the internal sensor. In this example, the ADC input channel is mapped to an internal temperature sensor. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value. In ADC ISR, the watermark flag would be cleared by reading the conversion result value. When the conversion done, two valid result will be put in the FIFO, then the temperature can be calculated within the two results and a specific formula." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/evkmimx8ulp/driver_examples/lpadc/temperature_measurement">
          <external path="driver_examples/lpadc/temperature_measurement" type="xml">
            <files mask="lpadc_temperature_measurement_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpadc_interrupt" name="lpadc_interrupt" brief="The lpadc_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/evkmimx8ulp/driver_examples/lpadc/interrupt">
          <external path="driver_examples/lpadc/interrupt" type="xml">
            <files mask="lpadc_interrupt_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpadc_polling" name="lpadc_polling" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/evkmimx8ulp/driver_examples/lpadc/polling">
          <external path="driver_examples/lpadc/polling" type="xml">
            <files mask="lpadc_polling_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpadc_single_interrupt" name="lpadc_single_interrupt" brief="The lpadc_single_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/evkmimx8ulp/driver_examples/lpadc/single_interrupt">
          <external path="driver_examples/lpadc/single_interrupt" type="xml">
            <files mask="lpadc_single_interrupt_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpadc_single_polling" name="lpadc_single_polling" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/evkmimx8ulp/driver_examples/lpadc/single_polling">
          <external path="driver_examples/lpadc/single_polling" type="xml">
            <files mask="lpadc_single_polling_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dac12_basic" name="dac12_basic" brief="The dac12_basic example shows how to use DAC12 module simply as the general DAC12 converter.When the DAC12's fifo feature is not enabled, Any write to the DATA register will replace thedata in the buffer and push data to analog conversion without trigger support.In this example, it gets the value from terminal,outputs the DAC12 output voltage through DAC12 output pin." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/dac12" path="examples/evkmimx8ulp/driver_examples/dac12/basic">
          <external path="driver_examples/dac12/basic" type="xml">
            <files mask="dac12_basic_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dac12_fifo_interrupt" name="dac12_fifo_interrupt" brief="The dac12_fifo_interrupt example shows how to use DAC12 FIFO interrupt.When the DAC12 FIFO watermark interrupt is enabled firstly, the application would enter the DAC12 ISR immediately, since remaining FIFO data is less than the watermark. Then the FIFO would be feed inside the ISR. Then the DAC12 interrupt could be restrained. Once the DAC12 FIFO is triggered in while loop, the data in FIFO is read out, then it becomes less than the watermark, so the FIFO would be feed again in DAC12 ISR. With this example, user can define the DAC12 output array to generate the different wave output. Also the software trigger can be called in some timer ISR so that the DAC12 would output the analog signal in indicated period. Or even use the hardware trigger to release the CPU." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/dac12" path="examples/evkmimx8ulp/driver_examples/dac12/fifo_interrupt">
          <external path="driver_examples/dac12/fifo_interrupt" type="xml">
            <files mask="dac12_fifo_interrupt_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lptmr" name="lptmr" brief="The LPTMR project is a simple demonstration program of the SDK LPTMR driver. It sets up the LPTMRhardware block to trigger a periodic interrupt after every 1 second. When the LPTMR interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lptmr" path="examples/evkmimx8ulp/driver_examples/lptmr">
          <external path="driver_examples/lptmr" type="xml">
            <files mask="lptmr_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_ewm" name="ewm" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/ewm" path="examples/evkmimx8ulp/driver_examples/ewm">
          <external path="driver_examples/ewm" type="xml">
            <files mask="ewm_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lcdif_rgb565" name="lcdif_rgb565" brief="This example demonstrates how to use the LCDIF driver to show the RGB565 format frame buffer. When the example runs, a rectangle is moving in the screen, and its color changes when touch border." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lcdif" path="examples/evkmimx8ulp/driver_examples/lcdif/rgb565">
          <external path="driver_examples/lcdif/rgb565" type="xml">
            <files mask="lcdif_rgb565_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lcdif_gamma" name="lcdif_gamma" brief="This example demonstrates how to use the LCDIF gamma correction feature. In this example, the gamma corretion table is set to invert the original picture. The original picture is gradual changed gray bars, the gamma correction is continuously enabled and disabled, so you can see the screen switch between the original picture and the inverted picture." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lcdif" path="examples/evkmimx8ulp/driver_examples/lcdif/gamma">
          <external path="driver_examples/lcdif/gamma" type="xml">
            <files mask="lcdif_gamma_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lcdif_cursor_argb" name="lcdif_cursor_argb" brief="This example demonstrates how to use the LCDIF cursor in ARGB8888 mode. In this exapmle, the screen is devided into two parts: red and blue. A cursor is moving in the screen, the cursor alpha value changes during moving." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lcdif" path="examples/evkmimx8ulp/driver_examples/lcdif/cursor_argb">
          <external path="driver_examples/lcdif/cursor_argb" type="xml">
            <files mask="lcdif_cursor_argb_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_sai_interrupt" name="sai_interrupt" brief="The sai_interrupt example shows how to use sai functional API to implement interrupt playback:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimx8ulp/driver_examples/sai/interrupt">
          <external path="driver_examples/sai/interrupt" type="xml">
            <files mask="sai_interrupt_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_sai_interrupt_transfer" name="sai_interrupt_transfer" brief="The sai_interrupt_transfer example shows how to use sai driver with interrupt:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimx8ulp/driver_examples/sai/interrupt_transfer">
          <external path="driver_examples/sai/interrupt_transfer" type="xml">
            <files mask="sai_interrupt_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_sai_edma_transfer" name="sai_edma_transfer" brief="The sai_edma_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimx8ulp/driver_examples/sai/edma_transfer">
          <external path="driver_examples/sai/edma_transfer" type="xml">
            <files mask="sai_edma_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_mrt_example" name="mrt_example" brief="The MRT project is a simple demonstration program of the SDK MRT driver. It sets up the MRThardware block to trigger a periodic interrupt after every 250 milliseconds. When the PIT interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/mrt" path="examples/evkmimx8ulp/driver_examples/mrt">
          <external path="driver_examples/mrt" type="xml">
            <files mask="mrt_example_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_rpmsg_lite_pingpong_rtos_linux_remote" name="rpmsg_lite_pingpong_rtos_linux_remote" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimx8ulp/multicore_examples/rpmsg_lite_pingpong_rtos/linux_remote">
          <external path="multicore_examples/rpmsg_lite_pingpong_rtos/linux_remote" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_linux_remote_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_rpmsg_lite_str_echo_rtos_imxcm33" name="rpmsg_lite_str_echo_rtos_imxcm33" brief="The Multicore RPMsg-Lite string echo project is a simple demonstration program that uses the MCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system.It works with Linux RPMsg master peer to transfer string content back and forth. The name servicehandshake is performed first to create the communication channels. Next, Linux OS waits for userinput to the RPMsg virtual tty. Anything which is received is sent to M33. M33 displays what is received, and echoes back the same message as an acknowledgement. The tty reader on the Linux side can get the message, and start another transaction. The demo demonstrates RPMsg’s ability to send arbitrary content back and forth. Note: The maximum message length supported by RPMsg is now 496 bytes. String longer than 496 will be divided by virtual tty into several messages.Shared memory usage:this multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimx8ulp/multicore_examples/rpmsg_lite_str_echo_rtos">
          <external path="multicore_examples/rpmsg_lite_str_echo_rtos" type="xml">
            <files mask="rpmsg_lite_str_echo_rtos_imxcm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_tstmr" name="tstmr" brief="The tstmr example shows the usage of TSTMR driver in application. The TSTMR module is a free running incrementing counter that starts running after system reset de-assertion and can be read at any time by the software for determining the software ticks.The TSTMR runs off the 1 MHz clock and resets on every system reset.In this example, it would output a time stamp information when the application is ready. And then, delay for 1 second with TSTMR_DelayUs() function. Before and after the delay, it would output the two time stamps information again." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tstmr" path="examples/evkmimx8ulp/driver_examples/tstmr">
          <external path="driver_examples/tstmr" type="xml">
            <files mask="tstmr_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_i2c_interrupt_lpi2c_transfer" name="flexio_i2c_interrupt_lpi2c_transfer" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimx8ulp/driver_examples/flexio/i2c/interrupt_lpi2c_transfer">
          <external path="driver_examples/flexio/i2c/interrupt_lpi2c_transfer" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_i2c_read_accel_value_transfer" name="flexio_i2c_read_accel_value_transfer" brief="The flexio_i2c_read_accel_value example shows how to use FLEXIO I2C  Master driver to communicate with an i2c device: 1. How to use the flexio i2c master driver to read a i2c device who_am_I register. 2. How to use the flexio i2c master driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimx8ulp/driver_examples/flexio/i2c/read_accel_value_transfer">
          <external path="driver_examples/flexio/i2c/read_accel_value_transfer" type="xml">
            <files mask="flexio_i2c_read_accel_value_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_uart_polling_transfer" name="flexio_uart_polling_transfer" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimx8ulp/driver_examples/flexio/uart/polling_transfer">
          <external path="driver_examples/flexio/uart/polling_transfer" type="xml">
            <files mask="flexio_uart_polling_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_uart_interrupt_transfer" name="flexio_uart_interrupt_transfer" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimx8ulp/driver_examples/flexio/uart/interrupt_transfer">
          <external path="driver_examples/flexio/uart/interrupt_transfer" type="xml">
            <files mask="flexio_uart_interrupt_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_uart_int_rb_transfer" name="flexio_uart_int_rb_transfer" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimx8ulp/driver_examples/flexio/uart/int_rb_transfer">
          <external path="driver_examples/flexio/uart/int_rb_transfer" type="xml">
            <files mask="flexio_uart_int_rb_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_uart_edma_transfer" name="flexio_uart_edma_transfer" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimx8ulp/driver_examples/flexio/uart/edma_transfer">
          <external path="driver_examples/flexio/uart/edma_transfer" type="xml">
            <files mask="flexio_uart_edma_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_spi_int_lpspi_transfer_master" name="flexio_spi_int_lpspi_transfer_master" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimx8ulp/driver_examples/flexio/spi/int_lpspi_transfer/master">
          <external path="driver_examples/flexio/spi/int_lpspi_transfer/master" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_spi_int_lpspi_transfer_slave" name="flexio_spi_int_lpspi_transfer_slave" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimx8ulp/driver_examples/flexio/spi/int_lpspi_transfer/slave">
          <external path="driver_examples/flexio/spi/int_lpspi_transfer/slave" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_spi_edma_lpspi_transfer_master" name="flexio_spi_edma_lpspi_transfer_master" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimx8ulp/driver_examples/flexio/spi/edma_lpspi_transfer/master">
          <external path="driver_examples/flexio/spi/edma_lpspi_transfer/master" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_spi_edma_lpspi_transfer_slave" name="flexio_spi_edma_lpspi_transfer_slave" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimx8ulp/driver_examples/flexio/spi/edma_lpspi_transfer/slave">
          <external path="driver_examples/flexio/spi/edma_lpspi_transfer/slave" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_pwm" name="flexio_pwm" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimx8ulp/driver_examples/flexio/pwm">
          <external path="driver_examples/flexio/pwm" type="xml">
            <files mask="flexio_pwm_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_trdc" name="trdc" brief="The trdc example shows how to control the memory block checker(MBC) and memory region checker(MRC) access policy using TRDC. In this example, a MRC memory region and a MBC memory block are set to unaccessible, then the hardfault occurs." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/trdc" path="examples/evkmimx8ulp/driver_examples/trdc">
          <external path="driver_examples/trdc" type="xml">
            <files mask="trdc_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_math" name="powerquad_math" brief="This example project shows how to use the powerquad driver math functions." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/powerquad" path="examples/evkmimx8ulp/driver_examples/powerquad/math">
          <external path="driver_examples/powerquad/math" type="xml">
            <files mask="powerquad_math_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_cmsis" name="powerquad_cmsis" brief="This example shows how to use powerquad driver CMSIS DSP compatible functions." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/powerquad" path="examples/evkmimx8ulp/driver_examples/powerquad/cmsis">
          <external path="driver_examples/powerquad/cmsis" type="xml">
            <files mask="powerquad_cmsis_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_filter" name="powerquad_filter" brief="This example shows how to use powerquad driver filter functions." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/powerquad" path="examples/evkmimx8ulp/driver_examples/powerquad/filter">
          <external path="driver_examples/powerquad/filter" type="xml">
            <files mask="powerquad_filter_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_matrix" name="powerquad_matrix" brief="This example shows how to use powerquad driver matrix functions." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/powerquad" path="examples/evkmimx8ulp/driver_examples/powerquad/matrix">
          <external path="driver_examples/powerquad/matrix" type="xml">
            <files mask="powerquad_matrix_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_transform" name="powerquad_transform" brief="This example shows how to use powerquad driver transform functions." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/powerquad" path="examples/evkmimx8ulp/driver_examples/powerquad/transform">
          <external path="driver_examples/powerquad/transform" type="xml">
            <files mask="powerquad_transform_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_fir_fast" name="powerquad_fir_fast" brief="The PowerQuad fetches data from system RAM and private RAM through different path, for the calcutations which need data from two parts of memory, such as FIR, convolve, correlate, and some matrix operations, place the input data B in private RAM improves the performance. PowerQuad private RAM starts from address 0xe0000000, the first 4KByte is used by PowerQuad driver, the RAM starts from 0xe0001000 could be used by user for optimization. In this example, the FIR taps, convolve input data B, and correlate input data B are not changed, so they are converted to float format and saved to private RAM at the beginning. If the example runs successfully, the performance using optimized method is better than the nornal method." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/powerquad" path="examples/evkmimx8ulp/driver_examples/powerquad/fir_fast">
          <external path="driver_examples/powerquad/fir_fast" type="xml">
            <files mask="powerquad_fir_fast_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_vector" name="powerquad_benchmark_vector" brief="This example shows the PowerQuad based CMSIS DSP function performance." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/powerquad" path="examples/evkmimx8ulp/driver_examples/powerquad/benchmark_vector">
          <external path="driver_examples/powerquad/benchmark_vector" type="xml">
            <files mask="powerquad_benchmark_vector_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_matrix" name="powerquad_benchmark_matrix" brief="This example shows the PowerQuad based CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_sw_matrix to show the PowerQuad performance improvement." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/powerquad" path="examples/evkmimx8ulp/driver_examples/powerquad/benchmark_matrix">
          <external path="driver_examples/powerquad/benchmark_matrix" type="xml">
            <files mask="powerquad_benchmark_matrix_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_math" name="powerquad_benchmark_math" brief="This example shows the PowerQuad based CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_sw_math to show the PowerQuad performance improvement." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/powerquad" path="examples/evkmimx8ulp/driver_examples/powerquad/benchmark_math">
          <external path="driver_examples/powerquad/benchmark_math" type="xml">
            <files mask="powerquad_benchmark_math_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_filter" name="powerquad_benchmark_filter" brief="This example shows the PowerQuad based CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_sw_filter to show the PowerQuad performance improvement." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/powerquad" path="examples/evkmimx8ulp/driver_examples/powerquad/benchmark_filter">
          <external path="driver_examples/powerquad/benchmark_filter" type="xml">
            <files mask="powerquad_benchmark_filter_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_fft" name="powerquad_benchmark_fft" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_fft to show the PowerQuad performance improvement." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/powerquad" path="examples/evkmimx8ulp/driver_examples/powerquad/benchmark_fft">
          <external path="driver_examples/powerquad/benchmark_fft" type="xml">
            <files mask="powerquad_benchmark_fft_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_sw_matrix" name="powerquad_benchmark_sw_matrix" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_matrix to show the PowerQuad performance improvement." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/powerquad" path="examples/evkmimx8ulp/driver_examples/powerquad/benchmark_sw_matrix">
          <external path="driver_examples/powerquad/benchmark_sw_matrix" type="xml">
            <files mask="powerquad_benchmark_sw_matrix_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_sw_math" name="powerquad_benchmark_sw_math" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_math to show the PowerQuad performance improvement." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/powerquad" path="examples/evkmimx8ulp/driver_examples/powerquad/benchmark_sw_math">
          <external path="driver_examples/powerquad/benchmark_sw_math" type="xml">
            <files mask="powerquad_benchmark_sw_math_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_sw_filter" name="powerquad_benchmark_sw_filter" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_filter to show the PowerQuad performance improvement." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/powerquad" path="examples/evkmimx8ulp/driver_examples/powerquad/benchmark_sw_filter">
          <external path="driver_examples/powerquad/benchmark_sw_filter" type="xml">
            <files mask="powerquad_benchmark_sw_filter_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_sw_fft" name="powerquad_benchmark_sw_fft" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_fft to show the PowerQuad performance improvement." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/powerquad" path="examples/evkmimx8ulp/driver_examples/powerquad/benchmark_sw_fft">
          <external path="driver_examples/powerquad/benchmark_sw_fft" type="xml">
            <files mask="powerquad_benchmark_sw_fft_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_sema42_uboot" name="sema42_uboot" brief="The sema42 uboot example shows how to use SEMA42 driver to lock and unlock a sema gate.This example should work together with uboot. This example runs on Cortex-M core,the uboot runs on the Cortex-A core." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/sema42" path="examples/evkmimx8ulp/driver_examples/sema42/uboot">
          <external path="driver_examples/sema42/uboot" type="xml">
            <files mask="sema42_uboot_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pdm_interrupt" name="pdm_interrupt" brief="The pdm_interrupt example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimx8ulp/driver_examples/pdm/pdm_interrupt">
          <external path="driver_examples/pdm/pdm_interrupt" type="xml">
            <files mask="pdm_interrupt_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pdm_hwvad" name="pdm_hwvad" brief="The pdm_hwvad example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimx8ulp/driver_examples/pdm/pdm_hwvad">
          <external path="driver_examples/pdm/pdm_hwvad" type="xml">
            <files mask="pdm_hwvad_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pdm_sai_interrupt" name="pdm_sai_interrupt" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimx8ulp/driver_examples/pdm/pdm_sai_interrupt">
          <external path="driver_examples/pdm/pdm_sai_interrupt" type="xml">
            <files mask="pdm_sai_interrupt_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pdm_sai_interrupt_transfer" name="pdm_sai_interrupt_transfer" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt transaction api:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimx8ulp/driver_examples/pdm/pdm_sai_interrupt_transfer">
          <external path="driver_examples/pdm/pdm_sai_interrupt_transfer" type="xml">
            <files mask="pdm_sai_interrupt_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pdm_edma_transfer" name="pdm_edma_transfer" brief="pdm_edma_transfer" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimx8ulp/driver_examples/pdm/pdm_edma_transfer">
          <external path="driver_examples/pdm/pdm_edma_transfer" type="xml">
            <files mask="pdm_edma_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pdm_sai_edma" name="pdm_sai_edma" brief="The pdm_sai_sdma example shows how to use pdm edma driver together with sai edma driver" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimx8ulp/driver_examples/pdm/pdm_sai_edma">
          <external path="driver_examples/pdm/pdm_sai_edma" type="xml">
            <files mask="pdm_sai_edma_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pxp_blend" name="pxp_blend" brief="The PXP blend project shows how to blend process surface and alpha surface usingPXP. If this example runs correctly, you will see two rectangles moving in thescreen. One rectangle is process surface output, and the other is alpha surfaceoutput, the overlay region color is OR'ed value of process surface and alpha surface." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pxp" path="examples/evkmimx8ulp/driver_examples/pxp/blend">
          <external path="driver_examples/pxp/blend" type="xml">
            <files mask="pxp_blend_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pxp_color_key" name="pxp_color_key" brief="The PXP color key project shows how to use the AS color key together with the alpha blend. In this example, the AS pixel format is RGB565, the global alpha is used for alpha blend." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pxp" path="examples/evkmimx8ulp/driver_examples/pxp/color_key">
          <external path="driver_examples/pxp/color_key" type="xml">
            <files mask="pxp_color_key_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pxp_copy_pic" name="pxp_copy_pic" brief="The PXP copy_pic project shows how to use the PXP to copy image from one buffer to another buffer." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pxp" path="examples/evkmimx8ulp/driver_examples/pxp/copy_pic">
          <external path="driver_examples/pxp/copy_pic" type="xml">
            <files mask="pxp_copy_pic_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pxp_flip" name="pxp_flip" brief="The PXP flip project shows how to use the PXP flip function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The flip mode is changing." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pxp" path="examples/evkmimx8ulp/driver_examples/pxp/flip">
          <external path="driver_examples/pxp/flip" type="xml">
            <files mask="pxp_flip_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pxp_porter_duff" name="pxp_porter_duff" brief="This example shows how to use the PXP Porter Duff compositing. In this example, A blue rectangle is in the left up corner of the destination surface (also named PS surface, or s0 in reference mannal). A red rectangle is in the center of the source surface (also named AS surface, or s1 in reference mannal). When press any key in the terminal, the Porter Duff mode changes and the panel shows the result." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pxp" path="examples/evkmimx8ulp/driver_examples/pxp/porter_duff">
          <external path="driver_examples/pxp/porter_duff" type="xml">
            <files mask="pxp_porter_duff_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pxp_rotate" name="pxp_rotate" brief="The PXP rotate project shows how to use the PXP rotate function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The rotate degree is changing." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pxp" path="examples/evkmimx8ulp/driver_examples/pxp/rotate">
          <external path="driver_examples/pxp/rotate" type="xml">
            <files mask="pxp_rotate_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pxp_scale" name="pxp_scale" brief="The PXP scale project shows how to use the PXP scale function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The square size is changing." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pxp" path="examples/evkmimx8ulp/driver_examples/pxp/scale">
          <external path="driver_examples/pxp/scale" type="xml">
            <files mask="pxp_scale_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_i3c_master_read_sensor_lsm6dso" name="i3c_master_read_sensor_lsm6dso" brief="The i3c_master_read_sensor_lsm6dso example shows how to use i3c driver as master to communicate with sensor LSM6DSO." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimx8ulp/driver_examples/i3c/master_read_sensor_lsm6dso">
          <external path="driver_examples/i3c/master_read_sensor_lsm6dso" type="xml">
            <files mask="i3c_master_read_sensor_lsm6dso_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dsp_hello_world_usart_cm33" name="dsp_hello_world_usart_cm33" brief="The dsp_hello_world_usart demo application demonstrates starting DSP core with DSP image." toolchain="armgcc" compiler="compiler_gcc" category="dsp_examples" path="examples/evkmimx8ulp/dsp_examples/hello_world_usart/cm33">
          <external path="dsp_examples/hello_world_usart/cm33" type="xml">
            <files mask="dsp_hello_world_usart_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dsp_pdm_sai_cm33" name="dsp_pdm_sai_cm33" brief="The dsp_pdm_sai demo application demonstrates running pdm-&gt;sai audio path on dsp core." toolchain="armgcc" compiler="compiler_gcc" category="dsp_examples" path="examples/evkmimx8ulp/dsp_examples/pdm_sai/cm33">
          <external path="dsp_examples/pdm_sai/cm33" type="xml">
            <files mask="dsp_pdm_sai_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dsp_mu_polling_cm33" name="dsp_mu_polling_cm33" brief="The dsp_mu_polling demo application demonstrates starting DSP core with DSP image." toolchain="armgcc" compiler="compiler_gcc" category="dsp_examples" path="examples/evkmimx8ulp/dsp_examples/mu_polling/cm33">
          <external path="dsp_examples/mu_polling/cm33" type="xml">
            <files mask="dsp_mu_polling_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dsp_sema42_cm33" name="dsp_sema42_cm33" brief="The dsp_sema42 demo application demonstrates starting DSP core with DSP image." toolchain="armgcc" compiler="compiler_gcc" category="dsp_examples" path="examples/evkmimx8ulp/dsp_examples/sema42/cm33">
          <external path="dsp_examples/sema42/cm33" type="xml">
            <files mask="dsp_sema42_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dsp_mu_interrupt_cm33" name="dsp_mu_interrupt_cm33" brief="The dsp_mu_interrupt demo application demonstrates starting DSP core with DSP image." toolchain="armgcc" compiler="compiler_gcc" category="dsp_examples" path="examples/evkmimx8ulp/dsp_examples/mu_interrupt/cm33">
          <external path="dsp_examples/mu_interrupt/cm33" type="xml">
            <files mask="dsp_mu_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_power_mode_switch" name="power_mode_switch" brief="The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menuthrough the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeupsource by following the debug console prompts. The purpose of this demo is to show how to switch between different power modes, and how to configure a wakeup source and wakeup the MCU from low power modes. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - Debug pins(e.g SWD_DIO) would consume addtional power, had better to disable related pins or disconnect them. " toolchain="armgcc" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimx8ulp/demo_apps/power_mode_switch">
          <external path="demo_apps/power_mode_switch" type="xml">
            <files mask="power_mode_switch_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_epdc" name="epdc" brief="This example shows how to use the PXP to process pixels, apply waveform mode then use the EPDC to drive the E-INK panel. In this example, first an image of RGB888 pixel format is processed by PXP to generate Y4 pixel data. Then PXP waveform engine will apply the waveform mode 2 to the pixel data for EPDC to update high quality image to the screen. The same image is updated to screen 4 times on different locations. Collision shall occur and non-collided update(s) will appear on screen together within one fresh, the collided update(s) will wait until the previous update(s) finish then refresh. Next the panel is cleared and PXP waveform engine will constantly apply the waveform mode 1 to black dot for EPDC to draw line on panel to simulate pen input. The update shall be non-flashy and quicker than image update." toolchain="armgcc" compiler="compiler_gcc" category="demo_apps/epdc" path="examples/evkmimx8ulp/demo_apps/epdc">
          <external path="demo_apps/epdc" type="xml">
            <files mask="epdc_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_sai_low_power_audio" name="sai_low_power_audio" brief="In this demo, A core decoded music data and put it to DDR buffer and informs M core with the related information. Then M core will take the ownership of consuming the buffer, it will copy buffer from DDR to TCM, manipulating SDMA to transfer the data to SAI and codec for playback. It gives DDR and A core opportunity to do power saving for rather long time frame. M core core will also take ownership of codec initialization. SRTM(Simplified Real Time Messaging) protocol is used to communicate between A core an M4 core. " toolchain="armgcc" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimx8ulp/demo_apps/sai_low_power_audio">
          <external path="demo_apps/sai_low_power_audio" type="xml">
            <files mask="sai_low_power_audio_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dsp_voice_spot_demo_cm33" name="dsp_voice_spot_demo_cm33" brief="The dsp_voice_spot_demo demo application demonstrates starting DSP core with DSP image." toolchain="armgcc" compiler="compiler_gcc" category="dsp_examples" path="examples/evkmimx8ulp/dsp_examples/voice_spot_demo/cm33">
          <external path="dsp_examples/voice_spot_demo/cm33" type="xml">
            <files mask="dsp_voice_spot_demo_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_low_power_display" name="low_power_display" brief="low power display demo. " toolchain="armgcc" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimx8ulp/demo_apps/low_power_display">
          <external path="demo_apps/low_power_display" type="xml">
            <files mask="low_power_display_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_freertos_hello" name="freertos_hello" brief="The Hello World project is a simple demonstration program that uses the SDK UART driver in combination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimx8ulp/freertos_examples/freertos_hello">
          <external path="freertos_examples/freertos_hello" type="xml">
            <files mask="freertos_hello_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_freertos_swtimer" name="freertos_swtimer" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimx8ulp/freertos_examples/freertos_swtimer">
          <external path="freertos_examples/freertos_swtimer" type="xml">
            <files mask="freertos_swtimer_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_freertos_generic" name="freertos_generic" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimx8ulp/freertos_examples/freertos_generic">
          <external path="freertos_examples/freertos_generic" type="xml">
            <files mask="freertos_generic_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_freertos_event" name="freertos_event" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimx8ulp/freertos_examples/freertos_event">
          <external path="freertos_examples/freertos_event" type="xml">
            <files mask="freertos_event_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_freertos_queue" name="freertos_queue" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimx8ulp/freertos_examples/freertos_queue">
          <external path="freertos_examples/freertos_queue" type="xml">
            <files mask="freertos_queue_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_freertos_sem" name="freertos_sem" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimx8ulp/freertos_examples/freertos_sem">
          <external path="freertos_examples/freertos_sem" type="xml">
            <files mask="freertos_sem_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_freertos_mutex" name="freertos_mutex" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimx8ulp/freertos_examples/freertos_mutex">
          <external path="freertos_examples/freertos_mutex" type="xml">
            <files mask="freertos_mutex_v3_14.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
</ksdk:manifest>
