<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_frdmke02z40m_examples_manifest_v3_10" name="SDK_2.x_frdmke02z40m_examples_manifest_v3_10" format_version="3.10" api_version="2.0.0" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.10.xsd">
  <!--Timestamp (UTC): 2023-01-10 16:33:08.234560-->
  <!--This manifest is generated based on sdk repo commit: 11a5f6af5190bfe018a89b4d02c239713dc4cfa6-->
  <externalDefinitions>
    <definition extID="MKE02Z64VQH4"/>
    <definition extID="armgcc"/>
    <definition extID="mcuxpresso"/>
    <definition extID="compiler_gcc"/>
  </externalDefinitions>
  <ksdk id="MCUXpressoSDK2130_frdmke02z40m_examples_manifest_v3_10" name="MCUXpressoSDK2130_frdmke02z40m_examples_manifest_v3_10" version="2.13.0"/>
  <boards>
    <board id="frdmke02z40m" name="FRDM-KE02Z40M" href="https://www.nxp.com/pip/FRDM-KE02Z40M" version="1.0.0" package="MKE02Z64VQH4">
      <examples>
        <example id="frdmke02z40m_acmp_1_interrupt" name="acmp_1_interrupt" brief="The ACMP Interrupt project is a simple demonstration program that uses the SDK software. Itcompares the selected analog input with ACMP internal DAC output continuously and toggle the LEDwhen the final comparison result changed. The purpose of this demo is to show how to use theACMP driver in SDK software by interrupt way. The ACMP can be configured based on defaultconfiguration returned by the API ACMP_GetDefaultConfig()." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/acmp" path="driver_examples/acmp/interrupt">
          <external path="driver_examples/acmp/interrupt" type="xml">
            <files mask="acmp_1_interrupt_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_acmp_1_polling" name="acmp_1_polling" brief="The ACMP Polling project is a simple demonstration program that uses the SDK software. It comparesthe selected analog input with ACMP internal DAC output continuously and toggle the LED when thefinal comparison result changed. The purpose of this demo is to show how to use the ACMP driverin SDK software by polling way. The ACMP can be configured based on default configuration returnedby the API ACMP_GetDefaultConfig(). " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/acmp" path="driver_examples/acmp/polling">
          <external path="driver_examples/acmp/polling" type="xml">
            <files mask="acmp_1_polling_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_adc_5v12b_ll18_015_interrupt" name="adc_5v12b_ll18_015_interrupt" brief="The adc_interrupt example shows how to use interrupt with adc driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the adc'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC interrupt would be asserted once the conversion is completed. In ADC ISR, the conversion completed flag would be cleared by reading the conversion result value. Also, the conversion result value is stored, and the ISR counter is increased. These information would be printed when the execution return to the main loop.The point is that the adc interrupt configuration is set when configuring the adc's conversion channel. When in software trigger mode, the conversion would be launched by the operation of configuring channel, just like writing aconversion command. So if user wants to generate the interrupt every time the conversion is completed, the channel's configuration with enabling interrupt setting would be used for each conversion." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/adc" path="driver_examples/adc/interrupt">
          <external path="driver_examples/adc/interrupt" type="xml">
            <files mask="adc_5v12b_ll18_015_interrupt_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_adc_5v12b_ll18_015_polling" name="adc_5v12b_ll18_015_polling" brief="The adc_polling example shows the simplest way to use adc driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the adc'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the conversion completed flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/adc" path="driver_examples/adc/polling">
          <external path="driver_examples/adc/polling" type="xml">
            <files mask="adc_5v12b_ll18_015_polling_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_cmsis_i2c_int_b2b_transfer_master" name="cmsis_i2c_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/i2c" path="cmsis_driver_examples/i2c/int_b2b_transfer/master">
          <external path="cmsis_driver_examples/i2c/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_i2c_int_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_cmsis_i2c_int_b2b_transfer_slave" name="cmsis_i2c_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/i2c" path="cmsis_driver_examples/i2c/int_b2b_transfer/slave">
          <external path="cmsis_driver_examples/i2c/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_i2c_int_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_cmsis_i2c_read_accel_value_transfer" name="cmsis_i2c_read_accel_value_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_read_accel_value example shows how to use CMSIS I2C driver to communicate with an i2c device: 1. How to use the i2c driver to read a i2c device who_am_I register. 2. How to use the i2c driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/i2c" path="cmsis_driver_examples/i2c/read_accel_value_transfer">
          <external path="cmsis_driver_examples/i2c/read_accel_value_transfer" type="xml">
            <files mask="cmsis_i2c_read_accel_value_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_cmsis_spi_interrupt_b2b_transfer_master" name="cmsis_spi_interrupt_b2b_transfer_master" brief="The spi_interrupt_b2b_transfer example shows how to use spi CMSIS driver in interrupt way:In this example , we need two boards, one board used as spi master and another board used as spi slave.The file 'spi_interrupt_b2b_transfer_master.c' includes the spi master code.This example uses the transactional API in spi driver.1. spi master send/received data to/from spi slave in interrupt . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/spi" path="cmsis_driver_examples/spi/interrupt_b2b_transfer/master">
          <external path="cmsis_driver_examples/spi/interrupt_b2b_transfer/master" type="xml">
            <files mask="cmsis_spi_interrupt_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_cmsis_spi_interrupt_b2b_transfer_slave" name="cmsis_spi_interrupt_b2b_transfer_slave" brief="The spi_interrupt_b2b_transfer example shows how to use SPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as SPI master and another board used as SPI slave.The file 'spi_interrupt_b2b_transfer_slave.c' includes the SPI slave code.This example uses the transactional API in SPI driver.1. SPI master send/received data to/from SPI slave in interrupt . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/spi" path="cmsis_driver_examples/spi/interrupt_b2b_transfer/slave">
          <external path="cmsis_driver_examples/spi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="cmsis_spi_interrupt_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_cmsis_uart_interrupt_transfer" name="cmsis_uart_interrupt_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/uart" path="cmsis_driver_examples/uart/interrupt_transfer">
          <external path="cmsis_driver_examples/uart/interrupt_transfer" type="xml">
            <files mask="cmsis_uart_interrupt_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_eeprom_ftmr" name="eeprom_ftmr" brief="The eeprom example shows how to use flash driver to operate program eeprom:" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flash" path="driver_examples/flash/eeprom">
          <external path="driver_examples/flash/eeprom" type="xml">
            <files mask="eeprom_ftmr_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_ftm_combine_pwm" name="ftm_combine_pwm" brief="The FTM project is a demonstration program of generating a combined PWM signal by the SDK FTM driver. It sets up the FTMhardware block to output PWM signals on two TPM channels. The example also shows the complementary mode of operationand deadtime insertion.On boards that have 2 LEDs connected to the FTM pins, the user will see a change in LED brightness.And if the board do not support LEDs to show, the outputs can be observed by oscilloscope." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/ftm" path="driver_examples/ftm/combine_pwm">
          <external path="driver_examples/ftm/combine_pwm" type="xml">
            <files mask="ftm_combine_pwm_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_ftm_dual_edge_capture" name="ftm_dual_edge_capture" brief="The FTM project is a demonstration program of the SDK FTM driver's dual-edge capture feature.This feature is available only on certain SoC's.The example sets up a FTM channel-pair for dual-edge capture. Once the input signal is received,this example will print the capture values and period of the input signal on the terminal window." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/ftm" path="driver_examples/ftm/dual_edge_capture">
          <external path="driver_examples/ftm/dual_edge_capture" type="xml">
            <files mask="ftm_dual_edge_capture_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_ftm_input_capture" name="ftm_input_capture" brief="The FTM project is a demonstration program of the SDK FTM driver's input capture feature.The example sets up a FTM channel for dual-edge capture. Once the input signal is received,this example will print the capture value." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/ftm" path="driver_examples/ftm/input_capture">
          <external path="driver_examples/ftm/input_capture" type="xml">
            <files mask="ftm_input_capture_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_ftm_output_compare" name="ftm_output_compare" brief="The FTM project is a demonstration program of the SDK FTM driver's output compare feature.It sets up one FTM channel to toggle the output when a match occurs with the channel value. The usershould probe the FTM output with a oscilloscope to see the signal toggling." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/ftm" path="driver_examples/ftm/output_compare">
          <external path="driver_examples/ftm/output_compare" type="xml">
            <files mask="ftm_output_compare_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_ftm_pwm_twochannel" name="ftm_pwm_twochannel" brief="The FTM pwm two channel Example project is a demonstration program that uses the KSDK software to generate a square pulse PWM on 2 channel to control the LED brightness.- FTM generates a PWM with the increasing and decreasing duty cycle.- LED brightness is increasing and then dimming. This is a continuous process." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/ftm" path="driver_examples/ftm/pwm_twochannel">
          <external path="driver_examples/ftm/pwm_twochannel" type="xml">
            <files mask="ftm_pwm_twochannel_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_ftm_simple_pwm" name="ftm_simple_pwm" brief="The FTM project is a simple demonstration program of the SDK FTM driver. It sets up the FTMhardware block to output a center-aligned PWM signal. The PWM dutycycle is periodically updated.On boards that have an LED connected to the FTM pins, the user will see a change in LED brightness." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/ftm" path="driver_examples/ftm/simple_pwm">
          <external path="driver_examples/ftm/simple_pwm" type="xml">
            <files mask="ftm_simple_pwm_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_ftm_timer" name="ftm_timer" brief="The FTM project is a simple demonstration program of the SDK FTM driver to use FTM as a timer.It sets up the FTM hardware block to trigger an interrupt every 1 millisecond.When the FTM interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/ftm" path="driver_examples/ftm/timer">
          <external path="driver_examples/ftm/timer" type="xml">
            <files mask="ftm_timer_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_gpio_1_led_output" name="gpio_1_led_output" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/gpio_1" path="driver_examples/gpio_1/led_output">
          <external path="driver_examples/gpio_1/led_output" type="xml">
            <files mask="gpio_1_led_output_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_hello_world" name="hello_world" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="demo_apps/hello_world">
          <external path="demo_apps/hello_world" type="xml">
            <files mask="hello_world_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_i2c_interrupt_b2b_transfer_master" name="i2c_interrupt_b2b_transfer_master" brief="The i2c_interrupt_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="driver_examples/i2c/interrupt_b2b_transfer/master">
          <external path="driver_examples/i2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="i2c_interrupt_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_i2c_interrupt_b2b_transfer_slave" name="i2c_interrupt_b2b_transfer_slave" brief="The i2c_interrupt_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with interrupt:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="driver_examples/i2c/interrupt_b2b_transfer/slave">
          <external path="driver_examples/i2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="i2c_interrupt_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_i2c_polling_b2b_transfer_master" name="i2c_polling_b2b_transfer_master" brief="The i2c_polling_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer using polling method:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="driver_examples/i2c/polling_b2b_transfer/master">
          <external path="driver_examples/i2c/polling_b2b_transfer/master" type="xml">
            <files mask="i2c_polling_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_i2c_polling_b2b_transfer_slave" name="i2c_polling_b2b_transfer_slave" brief="The i2c_polling_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a polling master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="driver_examples/i2c/polling_b2b_transfer/slave">
          <external path="driver_examples/i2c/polling_b2b_transfer/slave" type="xml">
            <files mask="i2c_polling_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_i2c_read_accel_value_transfer" name="i2c_read_accel_value_transfer" brief="The i2c_read_accel_value example shows how to use I2C driver to communicate with an i2c device: 1. How to use the i2c driver to read a i2c device who_am_I register. 2. How to use the i2c driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="driver_examples/i2c/read_accel_value_transfer">
          <external path="driver_examples/i2c/read_accel_value_transfer" type="xml">
            <files mask="i2c_read_accel_value_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_irq" name="irq" brief="The IRQ Example project is a demonstration program that uses the MCUXpresso SDK software to useIRQ pin interrupt.The example uses the IRQ pin to generate a falling edge interrupt to show the example." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/irq" path="driver_examples/irq">
          <external path="driver_examples/irq" type="xml">
            <files mask="irq_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_kbi" name="kbi" brief="The KBI Example project is a demonstration program that uses the KSDK software to usekeyboard interrupt.The example uses one KBI pin to generate a raising edge interrupt to show the example." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/kbi" path="driver_examples/kbi">
          <external path="driver_examples/kbi" type="xml">
            <files mask="kbi_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_led_blinky_1" name="led_blinky_1" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="demo_apps/led_blinky">
          <external path="demo_apps/led_blinky" type="xml">
            <files mask="led_blinky_1_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_pflash_ftmr" name="pflash_ftmr" brief="The pflash example shows how to use flash driver to operate program flash:" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flash" path="driver_examples/flash/pflash">
          <external path="driver_examples/flash/pflash" type="xml">
            <files mask="pflash_ftmr_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_pit" name="pit" brief="The PIT project is a simple demonstration program of the SDK PIT driver. It sets up the PIThardware block to trigger a periodic interrupt after every 1 second. When the PIT interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pit" path="driver_examples/pit">
          <external path="driver_examples/pit" type="xml">
            <files mask="pit_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_rtc_1" name="rtc_1" brief="The RTC project is a simple demonstration program of the SDK RTC driver. It sets up the RTChardware block to trigger an alarm after a user specified time period. The test will set the currentdate and time to a predefined value. The alarm will be set with reference to this predefined dateand time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/rtc" path="driver_examples/rtc">
          <external path="driver_examples/rtc" type="xml">
            <files mask="rtc_1_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_spi_interrupt_b2b_master" name="spi_interrupt_b2b_master" brief="The spi_interrupt_b2b_master example shows how to use spi functional API to do interrupt transfer as a master:In this example, the spi instance as master. Master sends a piece of data to slave, receive data from slave,and checkif the data master received is correct. This example needs to work with spi_interrupt_b2b_slave example." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="driver_examples/spi/interrupt_b2b/master">
          <external path="driver_examples/spi/interrupt_b2b/master" type="xml">
            <files mask="spi_interrupt_b2b_master_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_spi_interrupt_b2b_slave" name="spi_interrupt_b2b_slave" brief="The spi_interrupt_b2b_slave example shows how to use spi functional API to do interrupt transfer as a slave:In this example, the spi instance as slave. Slave receives data froma master and send a peiece of data to master,and check if the data slave received is correct. This example needs to work with spi_interrupt_b2b_master example." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="driver_examples/spi/interrupt_b2b/slave">
          <external path="driver_examples/spi/interrupt_b2b/slave" type="xml">
            <files mask="spi_interrupt_b2b_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_spi_interrupt_b2b_transfer_master" name="spi_interrupt_b2b_transfer_master" brief="The spi_interrupt_board2board_master example shows how to use spi driver as master to do board to board transfer withinterrupt:In this example, one spi instance as master and another spi instance on othereboard as slave. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="driver_examples/spi/interrupt_b2b_transfer/master">
          <external path="driver_examples/spi/interrupt_b2b_transfer/master" type="xml">
            <files mask="spi_interrupt_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_spi_interrupt_b2b_transfer_slave" name="spi_interrupt_b2b_transfer_slave" brief="The spi_interrupt_board2board_slave example shows how to use spi driver as slave to do board to board transfer with interrupt:In this example, one spi instance as slave and another spi instance on other board as master. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="driver_examples/spi/interrupt_b2b_transfer/slave">
          <external path="driver_examples/spi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="spi_interrupt_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_tpm_input_capture" name="tpm_input_capture" brief="The TPM project is a demonstration program of the SDK TPM driver's input capture feature.The example sets up a TPM channel for dual-edge capture. Once the input signal is received,this example will print the capture value." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tpm" path="driver_examples/tpm/input_capture">
          <external path="driver_examples/tpm/input_capture" type="xml">
            <files mask="tpm_input_capture_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_tpm_output_compare" name="tpm_output_compare" brief="The TPM project is a demonstration program of the SDK TPM driver's output compare feature.It sets up one TPM channel to toggle the output when a match occurs with the channel value. The usershould probe the TPM output with a oscilloscope to see the signal toggling." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tpm" path="driver_examples/tpm/output_compare">
          <external path="driver_examples/tpm/output_compare" type="xml">
            <files mask="tpm_output_compare_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_tpm_pwm_twochannel" name="tpm_pwm_twochannel" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The PWM dutycycle on both channelsis manually updated. On boards that have an LED connected to the TPM pins, the user will seea change in LED brightness if user enter different values." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tpm" path="driver_examples/tpm/pwm_twochannel">
          <external path="driver_examples/tpm/pwm_twochannel" type="xml">
            <files mask="tpm_pwm_twochannel_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_tpm_simple_pwm" name="tpm_simple_pwm" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output a center-aligned PWM signal. The PWM dutycycle is manually updated.On boards that have an LED connected to the TPM pins, the user will see a change in LEDbrightness if user enter different values." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tpm" path="driver_examples/tpm/simple_pwm">
          <external path="driver_examples/tpm/simple_pwm" type="xml">
            <files mask="tpm_simple_pwm_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_tpm_timer" name="tpm_timer" brief="The TPM project is a simple demonstration program of the SDK TPM driver to use TPM as a timer.It sets up the TPM hardware block to trigger an interrupt every 1 millisecond.When the TPM interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tpm" path="driver_examples/tpm/timer">
          <external path="driver_examples/tpm/timer" type="xml">
            <files mask="tpm_timer_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_uart_interrupt" name="uart_interrupt" brief="The uart_functioncal_interrupt example shows how to use uart driver functionalAPI to receive data with interrupt method:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/uart" path="driver_examples/uart/interrupt">
          <external path="driver_examples/uart/interrupt" type="xml">
            <files mask="uart_interrupt_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_uart_interrupt_rb_transfer" name="uart_interrupt_rb_transfer" brief="The uart_interrupt_ring_buffer example shows how to use uart driver in interrupt way withRX ring buffer enabled:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/uart" path="driver_examples/uart/interrupt_rb_transfer">
          <external path="driver_examples/uart/interrupt_rb_transfer" type="xml">
            <files mask="uart_interrupt_rb_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_uart_interrupt_transfer" name="uart_interrupt_transfer" brief="The uart_interrupt example shows how to use uart driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/uart" path="driver_examples/uart/interrupt_transfer">
          <external path="driver_examples/uart/interrupt_transfer" type="xml">
            <files mask="uart_interrupt_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_uart_polling" name="uart_polling" brief="The uart_polling example shows how to use uart driver in polling way:In this example, one uart instance connect to PC through uart, the board will send back all characters that PCsend to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/uart" path="driver_examples/uart/polling">
          <external path="driver_examples/uart/polling" type="xml">
            <files mask="uart_polling_v3_10.xml"/>
          </external>
        </example>
        <example id="frdmke02z40m_wdog8" name="wdog8" brief="The WDOG8 Example project is to demonstrate usage of the wdog8 driver.In this example, fast testing is first implemented to test the wdog8.After this, refreshing the watchdog in None-window mode and window mode is executed.Note wdog8 is disabled in SystemInit function which means wdog8 is disabledafter chip emerges from reset." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/wdog8" path="driver_examples/wdog8">
          <external path="driver_examples/wdog8" type="xml">
            <files mask="wdog8_v3_10.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
</ksdk:manifest>
