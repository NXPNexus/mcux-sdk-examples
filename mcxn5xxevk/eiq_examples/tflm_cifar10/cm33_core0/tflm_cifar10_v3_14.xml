<?xml version="1.0" encoding="UTF-8"?>
<ksdk:examples xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd manifest.xsd">
  <externalDefinitions>
    <definition extID="cm33_core0_MCXN547"/>
    <definition extID="utility.debug_console_lite.MCXN547"/>
    <definition extID="platform.utilities.assert_lite.MCXN547"/>
    <definition extID="middleware.eiq.tensorflow_lite_micro.binary.MCXN547"/>
    <definition extID="component.lists.MCXN547"/>
    <definition extID="component.lpuart_adapter.MCXN547"/>
    <definition extID="platform.drivers.lpflexcomm_lpuart.MCXN547"/>
    <definition extID="platform.devices.MCXN547_CMSIS.MCXN547"/>
    <definition extID="platform.devices.MCXN547_startup.MCXN547"/>
    <definition extID="platform.drivers.port.MCXN547"/>
    <definition extID="platform.drivers.clock.MCXN547"/>
    <definition extID="platform.drivers.common.MCXN547"/>
    <definition extID="platform.drivers.gpio.MCXN547"/>
    <definition extID="middleware.eiq.tensorflow_lite_micro.neutron.MCXN547"/>
    <definition extID="platform.drivers.reset.MCXN547"/>
    <definition extID="platform.utilities.misc_utilities.MCXN547"/>
    <definition extID="utility.str.MCXN547"/>
    <definition extID="middleware.eiq.tensorflow_lite_micro.headers.MCXN547"/>
    <definition extID="middleware.eiq.tensorflow_lite_micro.third_party.flatbuffers.MCXN547"/>
    <definition extID="middleware.eiq.tensorflow_lite_micro.third_party.gemmlowp.MCXN547"/>
    <definition extID="middleware.eiq.tensorflow_lite_micro.third_party.ruy.MCXN547"/>
    <definition extID="platform.drivers.lpflexcomm.MCXN547"/>
    <definition extID="CMSIS_Include_core_cm.MCXN547"/>
    <definition extID="platform.devices.MCXN547_system.MCXN547"/>
    <definition extID="platform.drivers.mcx_spc.MCXN547"/>
    <definition extID="middleware.eiq.tensorflow_lite_micro.third_party.neutron_lib.binary.MCXN547"/>
    <definition extID="armgcc"/>
    <definition extID="mcuxpresso"/>
    <definition extID="com.nxp.mcuxpresso"/>
  </externalDefinitions>
  <example id="mcxn5xxevk_tflm_cifar10" name="tflm_cifar10" device_core="cm33_core0_MCXN547" dependency="utility.debug_console_lite.MCXN547 platform.utilities.assert_lite.MCXN547 middleware.eiq.tensorflow_lite_micro.binary.MCXN547 component.lists.MCXN547 component.lpuart_adapter.MCXN547 platform.drivers.lpflexcomm_lpuart.MCXN547 platform.devices.MCXN547_CMSIS.MCXN547 platform.devices.MCXN547_startup.MCXN547 platform.drivers.port.MCXN547 platform.drivers.clock.MCXN547 platform.drivers.common.MCXN547 platform.drivers.gpio.MCXN547 middleware.eiq.tensorflow_lite_micro.neutron.MCXN547 platform.drivers.reset.MCXN547 platform.utilities.misc_utilities.MCXN547 utility.str.MCXN547 middleware.eiq.tensorflow_lite_micro.headers.MCXN547 middleware.eiq.tensorflow_lite_micro.third_party.flatbuffers.MCXN547 middleware.eiq.tensorflow_lite_micro.third_party.gemmlowp.MCXN547 middleware.eiq.tensorflow_lite_micro.third_party.ruy.MCXN547 platform.drivers.lpflexcomm.MCXN547 CMSIS_Include_core_cm.MCXN547 platform.devices.MCXN547_system.MCXN547 platform.drivers.mcx_spc.MCXN547 middleware.eiq.tensorflow_lite_micro.third_party.neutron_lib.binary.MCXN547" category="eiq_examples">
    <projects>
      <project type="com.crt.advproject.projecttype.exe" nature="org.eclipse.cdt.core.ccnature"/>
    </projects>
    <toolchainSettings>
      <toolchainSetting id_refs="com.nxp.mcuxpresso">
        <option id="com.crt.advproject.gcc.exe.release.option.optimization.level" type="enum">
          <value>gnu.c.optimization.level.most</value>
        </option>
        <option id="com.crt.advproject.gcc.fpu" type="enum">
          <value>com.crt.advproject.gcc.fpu.fpv5sp.hard</value>
        </option>
        <option id="gnu.c.compiler.option.optimization.flags" type="string">
          <value>-fno-common</value>
        </option>
        <option id="com.crt.advproject.c.misc.dialect" type="enum">
          <value>com.crt.advproject.misc.dialect.gnu99</value>
        </option>
        <option id="gnu.c.compiler.option.misc.other" type="string">
          <value>-fmessage-length=0 -funsigned-char -Wno-strict-aliasing -mcpu=cortex-m33 -c -ffunction-sections -fdata-sections</value>
        </option>
        <option id="com.crt.advproject.cpp.exe.release.option.optimization.level" type="enum">
          <value>gnu.cpp.compiler.optimization.level.most</value>
        </option>
        <option id="com.crt.advproject.cpp.fpu" type="enum">
          <value>com.crt.advproject.cpp.fpu.fpv5sp.hard</value>
        </option>
        <option id="gnu.cpp.compiler.option.optimization.flags" type="string">
          <value>-fno-common</value>
        </option>
        <option id="com.crt.advproject.cpp.misc.dialect" type="enum">
          <value>com.crt.advproject.misc.dialect.gnupp11</value>
        </option>
        <option id="gnu.cpp.compiler.option.other.other" type="string">
          <value>-fmessage-length=0 -fno-exceptions -fno-rtti -fno-threadsafe-statics -fno-unwind-tables -funsigned-char -Wno-sign-compare -Wno-strict-aliasing -Wno-deprecated-declarations -mcpu=cortex-m33 -c -ffunction-sections -fdata-sections</value>
        </option>
        <option id="gnu.cpp.compiler.option.warnings.toerrors" type="boolean">
          <value>false</value>
        </option>
        <option id="gnu.c.compiler.option.preprocessor.def.symbols" type="stringList">
          <value>CPU_MCXN547VDF_cm33_core0</value>
          <value>SDK_DEBUGCONSOLE_UART</value>
          <value>ARM_MATH_CM33</value>
          <value>__FPU_PRESENT=1</value>
          <value>TF_LITE_STATIC_MEMORY</value>
          <value>MCUXPRESSO_SDK</value>
        </option>
        <option id="gnu.cpp.compiler.option.preprocessor.def" type="stringList">
          <value>SDK_DEBUGCONSOLE_UART</value>
          <value>ARM_MATH_CM33</value>
          <value>__FPU_PRESENT=1</value>
          <value>CPU_MCXN547VDF_cm33_core0</value>
          <value>TF_LITE_STATIC_MEMORY</value>
          <value>MCUXPRESSO_SDK</value>
        </option>
        <option id="com.crt.advproject.link.cpp.fpu" type="enum">
          <value>com.crt.advproject.link.cpp.fpu.fpv5sp.hard</value>
        </option>
        <option id="gnu.cpp.link.option.nostdlibs" type="boolean">
          <value>true</value>
        </option>
        <option id="com.crt.advproject.link.memory.heapAndStack.cpp" type="string">
          <value>&amp;Heap:Default;Default;Default&amp;Stack:SRAM;End;0x2000</value>
        </option>
        <option id="gnu.cpp.link.option.other" type="stringList">
          <value>-no-warn-rwx-segments</value>
        </option>
        <option id="com.crt.advproject.gas.fpu" type="enum">
          <value>com.crt.advproject.gas.fpu.fpv5sp.hard</value>
        </option>
      </toolchainSetting>
    </toolchainSettings>
    <include_paths>
      <include_path path="source" project_relative_path="source" type="c_include"/>
      <include_path path="source/image" project_relative_path="source/image" type="c_include"/>
      <include_path path="source/model" project_relative_path="source/model" type="c_include"/>
      <include_path path="." project_relative_path="board" type="c_include"/>
    </include_paths>
    <source path="armgcc" project_relative_path="./" type="workspace" toolchain="armgcc">
      <files mask="build_all.bat"/>
      <files mask="build_all.sh"/>
      <files mask="clean.bat"/>
      <files mask="clean.sh"/>
      <files mask="CMakeLists.txt"/>
      <files mask="flags.cmake"/>
      <files mask="config.cmake"/>
      <files mask="build_release.bat"/>
      <files mask="build_release.sh"/>
      <files mask="build_debug.bat"/>
      <files mask="build_debug.sh"/>
    </source>
    <source path="../../../../../core/devices/MCXN547" project_relative_path="./" type="workspace" toolchain="armgcc">
      <files mask="all_lib_device.cmake"/>
    </source>
    <source path="source" project_relative_path="source" type="c_include">
      <files mask="demo_info.h"/>
      <files mask="timer.h"/>
    </source>
    <source path="source/image" project_relative_path="source/image" type="c_include">
      <files mask="image.h"/>
      <files mask="image_utils.h"/>
    </source>
    <source path="source/image" project_relative_path="source/image" type="src">
      <files mask="image_decode_raw.c"/>
      <files mask="image_load.c"/>
    </source>
    <source path="source/model" project_relative_path="source/model" type="src">
      <files mask="get_top_n.cpp"/>
    </source>
    <source path="source/model" project_relative_path="source/model" type="c_include">
      <files mask="get_top_n.h"/>
      <files mask="model.h"/>
      <files mask="output_postproc.h"/>
    </source>
    <source path="source/model" project_relative_path="source/model" type="src">
      <files mask="output_postproc.cpp"/>
    </source>
    <source path="source" project_relative_path="source" type="c_include">
      <files mask="demo_config.h"/>
      <files mask="labels.h"/>
    </source>
    <source path="source" project_relative_path="source" type="src">
      <files mask="demo_info.cpp"/>
    </source>
    <source path="source/image" project_relative_path="source/image" type="c_include">
      <files mask="image_data.h"/>
    </source>
    <source path="source/model" project_relative_path="source/model" type="src">
      <files mask="model.cpp"/>
    </source>
    <source path="doc" project_relative_path="doc" type="doc">
      <files mask="ship.bmp"/>
    </source>
    <source path="source" project_relative_path="source" type="src">
      <files mask="main.cpp"/>
    </source>
    <source path="source" project_relative_path="source" type="src">
      <files mask="timer.c"/>
    </source>
    <source path="." project_relative_path="board" type="src">
      <files mask="clock_config.c"/>
      <files mask="board.c"/>
    </source>
    <source path="." project_relative_path="board" type="c_include">
      <files mask="clock_config.h"/>
      <files mask="board.h"/>
    </source>
    <source path="armgcc" project_relative_path="MCXN547/gcc" type="linker" toolchain="armgcc">
      <files mask="MCXN547_cm33_core0_flash.ld"/>
    </source>
    <source path="source/model" project_relative_path="source/model" type="src">
      <files mask="model_cifarnet_ops_npu.cpp"/>
    </source>
    <source path="source/model" project_relative_path="source/model" type="c_include">
      <files mask="model_data.h"/>
    </source>
    <source path="doc" project_relative_path="doc" type="doc">
      <files mask="cifarnet_quant_int8_npu.tflite"/>
    </source>
    <source path="." project_relative_path="board" type="src">
      <files mask="pin_mux.c"/>
    </source>
    <source path="." project_relative_path="board" type="c_include">
      <files mask="pin_mux.h"/>
    </source>
    <source path="." project_relative_path="board" type="src">
      <files mask="board_init.c"/>
    </source>
    <source path="." project_relative_path="board" type="c_include">
      <files mask="board_init.h"/>
    </source>
    <source path="." project_relative_path="doc" type="doc">
      <files mask="readme.md"/>
    </source>
  </example>
</ksdk:examples>
